version: '3.8'

name: mu2mi

services:
    postgres:
        image: postgres:16.1-alpine3.19
        container_name: postgres
        restart: unless-stopped
        environment:
            - PGUSER=postgres
            - POSTGRES_PASSWORD=awesomepassword
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - '5432:5432'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready']
            interval: 1s
            timeout: 5s
            retries: 10

    web-migration:
        build:
            context: .
            dockerfile: migration.Dockerfile
            target: migration
        container_name: web-migration
        restart: no
        environment:
            - DATABASE_URL=${DATABASE_URL}
        depends_on:
            postgres:
                condition: service_healthy
        network_mode: host

    redis:
        image: redis:7.2.4-alpine
        container_name: redis
        restart: unless-stopped
        command: redis-server --save 60 1 --loglevel warning
        volumes:
            - redis-data:/data
        ports:
            - '6379:6379'
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 1s
            timeout: 5s
            retries: 10

    minio:
        image: quay.io/minio/minio:RELEASE.2024-01-18T22-51-28Z
        container_name: minio
        restart: unless-stopped
        command: server /data --console-address :9001
        environment:
            - MINIO_ROOT_USER=${S3_ACCESS_KEY}
            - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
        ports:
            - 9000:9000
            - 9001:9001
        volumes:
            - minio_data:/data
        healthcheck:
            test: ['CMD', 'mc', 'ready', 'local']
            interval: 1s
            timeout: 5s
            retries: 10

    bucket-init:
        image: minio/mc:RELEASE.2024-03-30T15-29-52Z.fips
        container_name: bucket-init
        restart: no
        entrypoint: /bin/sh -c "/usr/bin/mc config host add minio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY}; /usr/bin/mc mb minio/${S3_BUCKET_NAME}; /usr/bin/mc anonymous set public minio/${S3_BUCKET_NAME}; exit 0;"
        environment:
            - S3_ACCESS_KEY=${S3_ACCESS_KEY}
            - S3_SECRET_KEY=${S3_SECRET_KEY}
            - S3_BUCKET_NAME=${S3_BUCKET_NAME}
        depends_on:
            minio:
                condition: service_healthy

volumes:
    postgres-data:
    redis-data:
    minio_data:
