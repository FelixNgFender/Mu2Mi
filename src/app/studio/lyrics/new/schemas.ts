import { lyricsTranscriptionAssetConfig } from '@/config/asset';
import { z } from 'zod';

export const lyricsTranscriptionSupportedLanguages = [
    'None',
    'afrikaans',
    'albanian',
    'amharic',
    'arabic',
    'armenian',
    'assamese',
    'azerbaijani',
    'bashkir',
    'basque',
    'belarusian',
    'bengali',
    'bosnian',
    'breton',
    'bulgarian',
    'cantonese',
    'catalan',
    'chinese',
    'croatian',
    'czech',
    'danish',
    'dutch',
    'english',
    'estonian',
    'faroese',
    'finnish',
    'french',
    'galician',
    'georgian',
    'german',
    'greek',
    'gujarati',
    'haitian creole',
    'hausa',
    'hawaiian',
    'hebrew',
    'hindi',
    'hungarian',
    'icelandic',
    'indonesian',
    'italian',
    'japanese',
    'javanese',
    'kannada',
    'kazakh',
    'khmer',
    'korean',
    'lao',
    'latin',
    'latvian',
    'lingala',
    'lithuanian',
    'luxembourgish',
    'macedonian',
    'malagasy',
    'malay',
    'malayalam',
    'maltese',
    'maori',
    'marathi',
    'mongolian',
    'myanmar',
    'nepali',
    'norwegian',
    'nynorsk',
    'occitan',
    'pashto',
    'persian',
    'polish',
    'portuguese',
    'punjabi',
    'romanian',
    'russian',
    'sanskrit',
    'serbian',
    'shona',
    'sindhi',
    'sinhala',
    'slovak',
    'slovenian',
    'somali',
    'spanish',
    'sundanese',
    'swahili',
    'swedish',
    'tagalog',
    'tajik',
    'tamil',
    'tatar',
    'telugu',
    'thai',
    'tibetan',
    'turkish',
    'turkmen',
    'ukrainian',
    'urdu',
    'uzbek',
    'vietnamese',
    'welsh',
    'yiddish',
    'yoruba',
] as const;

export const lyricsFormSchema = z.object({
    file: z
        .any()
        .refine(
            (files) => {
                return (
                    files?.[0]?.size <=
                    lyricsTranscriptionAssetConfig.maxFileSizeBytes
                );
            },
            `Max file size is ${
                lyricsTranscriptionAssetConfig.maxFileSizeBytes / 1024 / 1024
            } MB.`,
        )
        .refine(
            (files) =>
                lyricsTranscriptionAssetConfig.allowedMimeTypes.includes(
                    files?.[0]?.type,
                ),
            `Only ${lyricsTranscriptionAssetConfig.allowedFileTypes
                .map((type) => type.toUpperCase())
                .join(', ')} files are allowed.`,
        )
        .transform((files) => files?.[0]),
    task: z.enum(['transcribe', 'translate']).default('transcribe'),
    language: z.enum(lyricsTranscriptionSupportedLanguages).default('None'),
    batch_size: z.number().positive().int().lte(64).default(24),
    timestamp: z.enum(['chunk', 'word']).default('chunk'),
    diarise_audio: z.boolean().optional().default(false),
    hf_token: z.string().optional(),
});

export type LyricsFormType = z.infer<typeof lyricsFormSchema>;
